name: Auto Tag and Release on Merge

on:
  pull_request:
    branches: [master]
    types: [closed]

permissions:
  contents: write
  pull-requests: read

jobs:
  tag_and_release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout and fetch base
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git init
          git remote add origin "https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}"
          git fetch origin master --tags
          git checkout -b master origin/master
          echo "Checkout done"

      - name: Get current date
        id: date
        run: echo "DATE=$(date +'%Y.%m.%d')" >> $GITHUB_ENV

      - name: Get latest tag for today
        id: latest
        run: |
          TAG_PREFIX="${DATE}."
          LAST_TAG=$(git tag --list "${TAG_PREFIX}*" | sort -V | tail -n 1)

          if [ -z "$LAST_TAG" ]; then
            NEW_TAG="${TAG_PREFIX}01"
          else
            LAST_NUM=$(echo $LAST_TAG | awk -F. '{print $4}')
            NEXT_NUM=$(printf "%02d" $((10#$LAST_NUM + 1)))
            NEW_TAG="${TAG_PREFIX}${NEXT_NUM}"
          fi

          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          echo "Will create tag: $NEW_TAG"

      - name: Ensure tag does not already exist
        run: |
          if git rev-parse "$NEW_TAG" >/dev/null 2>&1; then
            echo "Tag $NEW_TAG already exists, skipping"
            exit 0
          fi

      - name: Create and push tag
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag $NEW_TAG
          git push origin $NEW_TAG

      - name: Create GitHub Release via API
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          COMMIT_SHA: ${{ github.sha }}
        run: |
          jq -n \
            --arg tag "${NEW_TAG}" \
            --arg pr_number "$PR_NUMBER" \
            --arg pr_title "$PR_TITLE" \
            --arg sha "$COMMIT_SHA" \
            '{
              tag_name: $tag,
              name: ("Release " + $tag + " (PR #" + $pr_number + ")"),
              body: ("Automatically generated release\n- Title: " + $pr_title + "\n- PR #" + $pr_number + " merged\n- Commit: " + $sha),
              draft: false,
              prerelease: false
            }' > release.json

          cat release.json # debug (optional)

          curl -s -X POST \
            -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${GITHUB_REPOSITORY}/releases \
            -d @release.json

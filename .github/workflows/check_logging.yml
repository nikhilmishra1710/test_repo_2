name: check-logging

on:
  pull_request:
    branches: [test1]

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  check-logging:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout and fetch base
        run: |
            git init
            git remote add origin "${{ github.event.repository.clone_url }}"
            git fetch origin test1
            git fetch origin ${{ github.head_ref }}
            git checkout -b pr_branch origin/${{ github.head_ref }}
            git branch --track test1 origin/test1

      - name: Determine diff range
        id: diff
        run: |
            base=$(git merge-base test1 pr_branch)
            echo "range=$base...pr_branch" >> "$GITHUB_OUTPUT"


      - name: Setup Python manually
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip
          python3 --version

      - name: Run logging check
        id: logcheck
        env:
          DIFF_RANGE: ${{ steps.diff.outputs.range }}
        run: |
          python3 .github/scripts/check_logging.py

      - name: Format output
        if: steps.logcheck.outputs.failed == 'true'
        id: set-output
        run: |
          DETAILS=${{ steps.logcheck.outputs.logging_info_violations_details }}
          if [ -z "$DETAILS" ]; then
              DETAILS="No \`logging.info\` violations found."
          else
              DETAILS=$(echo "$DETAILS" | sed 's/;/\n/g')
          fi
          echo "details<<EOF" >> "$GITHUB_OUTPUT"
          echo "$DETAILS" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Comment on PR (violations found)
        if: steps.logcheck.outputs.failed == 'true'
        run: |
          body="⚠️ Detected ${{ steps.logcheck.outputs.logging_info_violations_count }} \`logging.info\` statements in the code.
                \`\`\`
                ${{ steps.set-output.outputs.details }}
                \`\`\`"

          curl -s -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{\"body\": \"$body\"}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"

      - name: Comment on PR (no violations)
        if: steps.logcheck.outputs.failed != 'true'
        run: |
          curl -s -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"body": "✅ No `logging.info` violations found."}' \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"
